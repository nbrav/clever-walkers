Project title: Scalable brain-like cognitive architecture for virtual agents

Modelling computational and Biological Reinforcement Learning in virtual agents and performing navigation and collision-avoidance

----------------------------------------------------------------------------

Requirements:

1. Unity (works on version 2017.2.0f3 Personal)
2. Python (for plotting; works on version 2.7.6)

----------------------------------------------------------------------------

Running the brain: rl-brain directory includes scripts to run the brain network.

1. Compile the EmptyBrain.cpp file, execute after playing Unity simulation.

Running the brain on PDC: rl-brain has all the scripts

1. Login to Beskow PDC, using kinit and ssh.

2. Copy files to the directory in your klemming file system: 

> cd /cfs/klemming/nobackup/<u>/<username> 

where <username> is your PDC username and <u> is its first letter

3. Compile as CC -o EmptyBrain EmptyBrain.cpp

4. Get a node as: salloc --nodes=1 -t 0:10:00 -A <alloc_name>

where <alloc_name> is your allocation name. You can find it by projinfo command.

5. Run the executable as

> aprun -n 1 ./EmptyBrain

Running Unity: unity_project directory includes scripts need for Unity.

1. When inside Unity, run a Object with PopulateScene.cs script. It will generate (multiple) agents, running on QAgent.cs and ZombieAgent.cs scripts.

